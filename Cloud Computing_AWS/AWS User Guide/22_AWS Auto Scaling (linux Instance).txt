22강-AWS Auto Scaling 실습
----------------------------

1.좌측 EC2 대시보드에서 인스턴스의 시작템플릿을 클릭합니다.
표시 화면에서 주황색 "시작템플릿 생성" 단추를 클릭합니다.

2.시작 템플릿 생성화면에서 시작 템플릿 이름을 AWS-template 이라 입력하고 
템플릿 버전 설명에 aws-autoscaling template이라 입력후 "EC2 Auto Scaling에 사용할 수 있는 템플릿을 설정하는 데 도움이 되는 지침 제공" 체크박스를 체크합니다.

3.애플리케이션 및 OS 이미지(Amazon Machine Image) - 필수 섹션에서  Quick Start 클릭하고 Amazon linux 를 선택하고 인스턴스유형에는 t2.micro를 선택합니다.
이실습에서는 실습용web서버를 올리는 것으로 SSH접근은 하지 않을 것이기에 keypair는 사용하지 않을것입니다.키 페어(로그인)부분은 그대로 둡니다.

4.보안 그룹은 기존보안 그룹을 선택 후 이전 실습에서 만든 aws-elb-sg 을 선택

5.리소스 태그에서 새로운 태그추가 단추를 클릭 후 키부분에 Name입력, 값부분을 클릭하여 나타나는 aws-elb-webserver1 선택후 aws-webserver로 수정입력 , 리소스유형에 인스턴스와 볼륨 선택하고  화면 하단에 주황색 "시작템플릿 생성" 단추 클릭하고 다음화면하단에서 시작템플릿 보기단추를 클릭하면 생성완료화면이 나타나고 시작템플릿보기 단추를 클릭하여 AWS 시작템플릿이 표시되는것을 확인한다

6.AUTO SCALING메뉴에서 Auto Scaling 그룹을 클릭하여 우측화면상단의  Auto Scaling 그룹생성 주황색단추를 클릭하여 시작 템플릿 또는 구성 선택화면이 표시되면 Auto Scaling 그룹 이름에 "aws-asg"입력
시작 템플릿의 화살표를 클릭하여 이전에 만든 AWS-template 표시되면 선택하고 하단의 다음단추를 클릭합니다

7.인스턴스 유형 요구 사항 섹션에서  시작 템플릿이  AWS-template 표시되는지 확인

8. 인스턴스 대시보드에서  인스턴스 시작 옵션 선택 화면에서 네트워크섹션의 VPC는 10.0.0.0.16인 ELB-VPC선택
서브넷에서 이전실습시 작성한 subnet-2a와 subnet-2c선택후 표시확인후 다음단추 클릭

9.고급 옵션 구성화면의 로드 밸런싱 - 선택 사항에서 기존 로드 밸런서에 연결을 선택합니다(이로서 로드밸런서를 통해 EC2인스턴스를 시작할 수 있습니다)
로드밸런서를 연결하면 인스턴스 시작시 자동으로  등록됩니다

10. 기존 로드 밸런서 대상 그룹에서  대상 그룹 선택의 화살표를 눌러 aws-ELB-Webserver-Targetgroup | HTTP 를 선택합니다.


11.화면 하단의 추가 설정 - 선택 사항에 CloudWatch 내에서 그룹 지표 수집 활성화 체크박스를 클릭하여 선택하고 다음단추를 클릭합니다.

12.그룹 크기 및 조정 정책 구성화면에서 그룹 크기 - 선택 사항을 원하는 용량2,최소용량2,최대용량4로 입력합니다.

13.크기조정 정책에서 대상 추적 조정 정책을 선택합니다.대상값은 30으로 입력합니다(CPU사용률30을기준으로EC2 인스턴스개수를늘이거나줄이게 됩니다.)다음을 클릭합니다.

14.알림 추가 화면에서 다음을 클릭합니다.

15.태그 추가화면에서 태그추가 단추를 클릭하고 키입력부분에 name을 입력 값입력부분에 aws webserver 입력후 다음을 클릭

16,검토 화면이 표시되면 단계별 설정 사항을 확인하고  맨 하단에 Auto Scaling 그룹단추를 클릭

17.AWS-template 을 기반으로 한 aws-asg 이름의 auto-scaling그룹이 표시되는 것을 확인

[부하테스트]
18.로드밸런서를 클릭하고 생성된 AWSLab-ELB 로드밸런서의 세부정보탭에서
DNS이름을 복사하여 브라우저에서 붙여넣기를 수행하여 웹서버에 접속합니다.

19. Auto Scaling 그룹 대시보드에서 생성된 aws-asg 를 선택 후 작업단추의 편집을 선택하여 최대 용량을 확인한 후 화면 하단의 업데이트 단추를 클릭한다

20.인스턴스 대시보드에서 첫번째 인스턴스인 AWS-ELB-WEBserver1 을 선택하고 연결단추를 클릭 후 인스턴스에 연결화면에서 기본값으로 연결 단추를 클릭합니다. 
연결정보를 표시 한 콘솔화면에서 stress --help 입력하여 도움말 표시를 확인하고 "stress -c 1"  명령을 입력 수행하여 해당 인스턴스의 cpu에 부하를 발생 시킵니다.

21.인스턴스 대시보드로 돌아와  다시 AWS-ELB-WEBserver1 을 선택하고 하단의 모니터링탭을 클릭하여 해당인스턴스의 cpu사용률이 증가되는 그래프를 확인 합니다

22.관리콘솔에서 Auto Scaling 그룹을 클릭하여 생성된 aws-asg Auto Scaling 그룹을 클릭하고 활동 탭 선택하여 화면 하단의 작업기록 내역을 검토해봅니다(부하가 특정인스턴스에 집중되어 자동으로 오토스케일링이 수행된다)
작업기록 내용은 아래와 유사할 것입니다

"2023-08-17T18:03:03Z에 사용자가 AutoScalingGroup 제약 조건의 업데이트를 최소: 2, 최대: 4, 원하는: 2로 업데이트하여 원하는 용량을 1에서 2로 변경하도록 요청합니다. 2023-03-25T18:03:14Z에 인스턴스 원하는 용량과 실제 용량의 차이에 따라 시작하여 용량을 1에서 2로 늘렸습니다."

21.EC2대시보드를 통해 기존의 EC2인스턴스와  실행중인 늘어난 EC2인스턴스(공인IP 없음)들을 확인 할 수 있습니다.

22.부하테스트를 중단하고 필요시 정리합니다








